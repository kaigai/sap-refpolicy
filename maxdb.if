## <summary>Policy for MaxDB</summary>

######################################
## <summary>
##	Execute MaxDB in the maxdb_t domain
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`maxdb_domtrans',`
	gen_require(`
		type maxdb_t, maxdb_exec_t;
	')

	domtrans_pattern($1, maxdb_exec_t, maxdb_t)
')

########################################
## <summary>
##	Send a generic signal to MaxDB
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#



########################################
## <summary>
##	Execute maxdb executable in the caller domain
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowd access.
##	</summary>
## </param>
#
interface(`maxdb_exec',`
	gen_require(`
		type maxdb_exec_t;
	')

	can_exec($1, maxdb_exec_t)
')


########################################
## <summary>
##	Allow the specified domain to connect to maxdb with a tcp socket.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`maxdb_tcp_connect',`
	gen_require(`
		type maxdb_t;
	')
	corenet_tcp_recvfrom_labeled($1, maxdb_t)
	corenet_tcp_sendrecv_maxdb_port($1)
	corenet_tcp_connect_maxdb_port($1)
	corenet_sendrecv_maxdb_client_packets($1)
')

########################################
## <summary>
##	Allow the specified domain to connect to maxdb with a unix socket.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`maxdb_stream_connect',`
        gen_require(`
		type maxdb_t, maxdb_tmp_t;

                type postgresql_t, postgresql_var_run_t, postgresql_tmp_t;
        ')

	allow $1 maxdb_t:unix_stream_socket connectto;
	allow $1 maxdb_tmp_t:sock_file write;
')

########################################
## <summary>
##	Search the directories that contain MaxDB
##	database storage.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`maxdb_search_db',`
	gen_require(`
		type maxdb_db_t;
	')

	files_search_var_lib($1)
	getattr_files_pattern($1, maxdb_db_t, maxdb_db_t)
')

########################################
## <summary>
##	Alow a domain to execute MaxDB binaries without domain transition
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`maxdb_exec_cmd',`
	gen_require(`
		type maxdb_exec_t;
		type maxdb_initrc_exec_t;
	')
	corecmd_search_bin($1)
	can_exec($1, maxdb_exec_t)
	can_exec($1, maxdb_initrc_exec_t)
')

########################################
## <summary>
##	Allow a domain to create tmpfs files corresponding to MaxDB
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`maxdb_create_tmpfs_files',`
	gen_require(`
		type maxdb_tmpfs_t;
	')

	fs_search_tmpfs($1)
	fs_tmpfs_filetrans($1, maxdb_tmpfs_t, file)
	manage_files_pattern($1, maxdb_tmpfs_t, maxdb_tmpfs_t)
')

########################################
## <summary>
##	Alow a domain to create tmp files corresponding to MaxDB
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`maxdb_create_tmp_files',`
	gen_require(`
		type maxdb_tmp_t;
	')
	files_tmp_filetrans($1, maxdb_tmp_t, {file dir sock_file})
	manage_dirs_pattern($1, maxdb_tmp_t, maxdb_tmp_t)
	manage_files_pattern($1, maxdb_tmp_t, maxdb_tmp_t)
	manage_sock_files_pattern($1, maxdb_tmp_t, maxdb_tmp_t)
')

########################################
## <summary>
##	Alow a domain to create working files corresponding to MaxDB
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`maxdb_create_work_files',`
	gen_require(`
		type maxdb_work_t;
	')
	manage_dirs_pattern($1, maxdb_work_t, maxdb_work_t)
	manage_files_pattern($1, maxdb_work_t, maxdb_work_t)
	manage_lnk_files_pattern($1, maxdb_work_t, maxdb_work_t)
	manage_fifo_files_pattern($1, maxdb_work_t, maxdb_work_t)
')

########################################
## <summary>
##	Alow a domain to read/write working files corresponding to MaxDB
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`maxdb_rw_work_files',`
	gen_require(`
		type maxdb_work_t;
	')
	list_dirs_pattern($1, maxdb_work_t, maxdb_work_t)
	rw_files_pattern($1, maxdb_work_t, maxdb_work_t)
	rw_lnk_files_pattern($1, maxdb_work_t, maxdb_work_t)
	rw_fifo_files_pattern($1, maxdb_work_t, maxdb_work_t)
')

########################################
## <summary>
##	Alow a domain to read working files corresponding to MaxDB
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`maxdb_read_work_files',`
	gen_require(`
		type maxdb_work_t;
	')
	list_dirs_pattern($1, maxdb_work_t, maxdb_work_t)
	read_files_pattern($1, maxdb_work_t, maxdb_work_t)
	read_lnk_files_pattern($1, maxdb_work_t, maxdb_work_t)
	read_fifo_files_pattern($1, maxdb_work_t, maxdb_work_t)
')

########################################
## <summary>
##	All of the rules required to administrate an maxdb environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	The role to be allowed to manage the maxdb domain.
##	</summary>
## </param>
## <rolecap/>
#
interface(`maxdb_admin',`
	gen_require(`
		type maxdb_t;
		type maxdb_initrc_exec_t;
	')
	allow $1 maxdb_t:process { ptrace signal_perms };
	ps_process_pattern($1, maxdb_t)

	init_labeled_script_domtrans($1, maxdb_initrc_exec_t)
	role_transition $2 maxdb_initrc_exec_t system_r;
	allow $2 system_r;

	maxdb_tcp_connect($1)
	maxdb_stream_connect($1)
	maxdb_rw_work_files($1)
')
